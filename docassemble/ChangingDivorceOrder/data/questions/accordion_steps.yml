comment: |
  After testing:
  1. Replace:
      ${ al_user_bundle.download_list_html() }
      [get the docx file](${ docx_changing_divorce_order_attachment.docx.url_for() }) 
    with:
      ${ download_buttons_html(al_user_bundle) }
  2. comment out:
       script: |
         <script>
           Array.from(document.querySelectorAll('.al_collapse_template .collapse')).forEach((elem) => { elem.className += " show" })
         </script>
id: final screen
decoration: pen-to-square
event: confirmation_and_download
question: |
  % if len(step_list) < 2:
  Get more information or help
  % else:
  # <i class="fa-thin fa-list"></i>Your Personal Action Plan is ready!
  % endif
subquestion: |
  % if user_need == 'change foreign custody order' or (user_need == 'change divorce order' and defined('type_of_final_order') and type_of_final_order.all_true('custody order', exclusive = True)):
  #### Your Personal Action Plan for changing your custody or parenting plan in ${ len(step_list) } steps
  % elif user_need ==  'respond to motion in divorce':
  % if type_of_response == 'appeal':
  #### Your Personal Action Plan for responding to an appeal in ${ len(step_list) } steps
  % else:
  #### Your Personal Action Plan for responding to a motion in ${ len(step_list) } steps
  % endif
  % else:
  % if middle_of_case == 'yes':
  #### Your Personal Action Plan for changing a court order during your divorce case in ${ len(step_list) } steps
  % else:
  #### Your Personal Action Plan for changing a court order from your divorce case in ${ len(step_list) } steps
  % endif
  % endif
  % for iteration_index, step_tuple in enumerate( step_list ):
  ${ collapse_template(step_tuple[0], closed_icon="plus", open_icon="minus") }
  % endfor
  
  ${ al_user_bundle.download_list_html() }
  [get the docx file](${ docx_changing_divorce_order_attachment.docx.url_for() }) 
  
buttons:
  - Start over: restart
script: |
  <script>
    Array.from(document.querySelectorAll('.al_collapse_template .collapse')).forEach((elem) => { elem.className += " show" })
  </script>
---
code: |
  # Temporarily disable why_change
  old_why_change = {
     'set aside clerical error': True,
     'set aside mistake of fact': True,
     'set aside new evidence': True,
     'set aside misconduct': True,
     'modify circumstances changed': True,
     'modify parent to jail': True,
     'modify domestic violence': True,
     'modify other change': True,
     'appeal legal mistake': True,
     'set aside new evidence': True,
  }
  
  log('start','console')
  step_list = []
  if len(step_list) >= 2:
    pdf_pap_multistep_subtitle = True
  images_list = []
  distribution_certificate_list = []
  reply_certificate_list = []
  other_party_in_case  = 'your spouse or ex'
  case_type = 'divorce'
  # certificate_of_service_image = ''
  distribution_certificate_list.append({'image': distrib_cert_custody_divorce_image, 'text': "Certificate of Distribution shows the date the court sent your order to you."})
  file_motion_to_set_aside = ''
  file_motion_to_enforce = ''
  file_modify_filing_fee = ''
  # expect_after_motion is in what to expect step for filing motion for interim order w complaint, or answer/response, cannot use variable in docx template, must insert condition in what to expect step.
  expect_after_motion = ''
  reply_certificate_list.append({'image': service_cert_reply_image, 'text': "Certificate of Service at the bottom of the Reply form."})
  # motion_type used in expect_after_motion_step "What to expect after you file a ${ motion_type }"
  motion_type = 'motion'
  
  if user_need == 'none':
    add_unique_step((wrong_tf, "wrong_tf_idx"), step_list)
    add_unique_step((wrong_tf2, "wrong_tf2_idx"), step_list)
    
  # Row 1
  elif user_need == 'change foreign custody order':
    other_party_in_case  = 'the other parent'
    add_unique_step((foreign_order_step, "foreign_order_idx"), step_list)
    add_unique_step((ak_jurisdiction_step, "ak_jurisdiction_idx"), step_list)
    add_unique_step((register_order_step, "register_order_idx"), step_list)
    add_unique_step((modify_step, "modify_idx"), step_list)
    add_unique_step((fill_modify_step, "fill_modify_idx"), step_list)
    add_unique_step((calculate_child_support_step, "calculate_child_support_idx"), step_list)
    add_unique_step((dont_wait_modify_custody_divorce_step, "dont_wait_modify_custody_divorce_idx"), step_list)
    add_unique_image({'image': service_cert_modify_image, 'text': "Certificate of Service at the bottom of a Motion to Modify."}, images_list)
    add_unique_step((cert_of_service_step, "cert_of_service_idx"), step_list)
    file_step_heading = 'File your Motion to Modify'
    file_modify_filing_fee = '<li>Pay the $75 fee to file your Motion to Modify.</br>If you cannot afford the filing fee, you can ask the court to waive it:</li><ul><li>Call the <a href="https://courts.alaska.gov/shc/family">Family Law Self-HelpCenter</a><br>(907)264-0851, or<br>(866)279-0851,<br>or</li><li>Use <strong>Exemption From the Payment of Fees, TF-920</strong>[<a href="https://public.courts.alaska.gov/web/forms/docs/tf-920.pdf">Fill-In PDF</a>]</li></ul>'
    add_unique_step((file_step, "file_idx"), step_list)
    add_unique_step((serve_step, "serve_idx"), step_list)
    motion_type = 'Motion to Modify'
    add_unique_step((expect_after_motion_step, "expect_after_motion_idx"), step_list)
  
  elif user_need == 'respond to motion in divorce':
  
    # Rows 2 - 10
    if type_of_response == 'custody':
      motion_type = 'Motion to Modify'
      other_party_in_case = 'the other parent'
    # Rows 2 - 10
    if type_of_response in('divorce', 'all divorce'):
      motion_type = 'Motion to Modify'
      other_party_in_case = 'your spouse or ex'

    # Row 11
    if type_of_response == 'reconsider' and respond_to_reconsider:
      add_unique_step((respond_to_reconsider_step, "respond_to_reconsider_idx"), step_list)
      other_party_in_case = 'your spouse or ex'
      
    # Row 12 - 14
    if type_of_response == 'set aside':
      motion_type = 'Motion to Set Aside Judgment or Order'
      other_party_in_case = 'your ex'
      
    # Row 12 - 14
    if type_of_response == 'appeal':
      other_party_in_case = 'your ex'
    
    # Rows 2, 5, 8 & 12 
    if (type_of_response in('custody','divorce', 'all divorce') and respond_to_custody == 'agree') or (type_of_response == 'set aside' and respond_to_set_aside == 'agree'):
      add_unique_step((let_court_party_know_you_agree_step, "let_court_party_know_you_agree_idx"), step_list)
    
    # Row 2-10, 12-14
    if type_of_response in('custody','divorce','all divorce') or type_of_response == 'set aside':
      add_unique_step((respond_in_writing_step, "respond_in_writing_idx"), step_list)
    
    # Row 2-14  
    if type_of_response in('custody','divorce','all divorce','set aside', 'reconsider' ):
      add_unique_step((file_response_step, "file_response_idx"), step_list)
    
    # Row 2-10, 12-14
    if type_of_response in('custody','divorce', 'all divorce', 'set aside'):
      add_unique_step((expect_after_response_step, "expect_after_response_idx"), step_list)
      
    if (type_of_response in('custody','divorce','all divorce') and respond_to_custody == 'agree') or (type_of_response == 'set aside' and respond_to_set_aside == 'agree'):
      add_unique_step((contact_other_party_step, "contact_other_party_idx"), step_list)    
      add_unique_step((file_agreement_step, "file_agreement_idx"), step_list)
    
    # Row 15
    if type_of_response == 'appeal' and respond_to_appeal == 'agree':
      
      add_unique_step((appeal_response_step, "appeal_response_idx"), step_list)
      add_unique_step((appeal_contact_parent_step, "appeal_contact_parent_idx"), step_list)
      add_unique_step((tell_supreme_court_step, "tell_supreme_court_idx"), step_list)
    
    # Rows 16 & 17
    if type_of_response =='appeal' and respond_to_appeal in('some','none'):
      add_unique_step((appeal_response_step, "appeal_response_idx"), step_list)
    
  else:    
       ##################### middle of case
    if middle_of_case == 'yes':
      other_party_in_case = 'your spouse'
      
    # Rows 18-19 
    if middle_of_case == 'yes' \
      and type_of_interim_order == 'motion' \
      and interim_order_date_within_10_days:
      if parents_agree:
        add_unique_step((pick_a_step_step, "pick_a_step_idx"), step_list)
        add_unique_step((parents_agree_step, "parents_agree_idx"), step_list)
        add_unique_step((tell_the_court_step, "tell_the_court_idx"), step_list)
      add_unique_step((learn_reconsider_step, "learn_reconsider_idx"), step_list)
      add_unique_step((fill_reconsider_step, "fill_reconsider_idx"), step_list)
      add_unique_image({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Reconsider"}, images_list)
      add_unique_step((cert_of_service_step, "cert_of_service_idx"), step_list)
      file_step_heading = 'File your Motion to Reconsider'
      add_unique_step((file_step, "file_idx"), step_list)
      add_unique_step((serve_step, "serve_idx"), step_list)
      add_unique_step((expect_reconsider_step, "expect_reconsider_idx"), step_list)
      
    # Rows 20 & 21
    if middle_of_case == 'yes' \
      and type_of_interim_order == 'motion' \
      and not interim_order_date_within_10_days: 
      if parents_agree:
        add_unique_step((pick_a_step_step, "pick_a_step_idx"), step_list)
        add_unique_step((parents_agree_step, "parents_agree_idx"), step_list)
        add_unique_step((tell_the_court_step, "tell_the_court_idx"), step_list)
      add_unique_step((motion_forms_step, "motion_forms_idx"), step_list)
      add_unique_image({'image': service_cert_motion_shc_1300_image, 'text': "Certificate of Service at the bottom of a motion."}, images_list)
      add_unique_step((cert_of_service_step, "cert_of_service_idx"), step_list) 
      add_unique_step((file_step, "file_idx"), step_list)
      add_unique_step((serve_step, "serve_idx"), step_list)
      add_unique_step((expect_after_motion_step, "expect_after_motion_idx"), step_list)
   
    # Rows 22-23 
    if middle_of_case == 'yes' \
      and type_of_interim_order == 'standing order':
      if parents_agree:
        add_unique_step((pick_a_step_step, "pick_a_step_idx"), step_list)
        add_unique_step((parents_agree_step, "parents_agree_idx"), step_list)
        add_unique_step((tell_the_court_step, "tell_the_court_idx"), step_list)
      add_unique_step((standing_order_step, "standing_order_idx"), step_list) 
      add_unique_step((motion_forms_step, "motion_forms_idx"), step_list)
      add_unique_image({'image': service_cert_motion_shc_1300_image, 'text': "Certificate of Service at the bottom of a motion."}, images_list)
      add_unique_step((cert_of_service_step, "cert_of_service_idx"), step_list) 
      add_unique_step((file_step, "file_idx"), step_list)
      add_unique_step((serve_step, "serve_idx"), step_list)
      add_unique_step((expect_after_motion_step, "expect_after_motion_idx"), step_list)
  
       ##################### after final order
    if middle_of_case == 'no':
      if type_of_final_order.all_true('custody order', exclusive = True):
        other_party_in_case = 'the other parent'
      else:
        other_party_in_case = 'your ex'
        
      if (type_of_final_order['custody order'] \
          and why_change in('review', 'schedule')) \
        and (type_of_final_order.any_true('property or debt', 'spousal support') \
          and why_change_divorce_order == 'changed circumstances'):
        file_modify_filing_fee = '<li>Pay one $75 fee to file both Motions to Modify at the same time. If you file your motions on different days, you must pay a $75 filing fee for each Motion to Modify.</br>If you cannot afford the filing fee, you can ask the court to waive it:</li><ul><li>Call the <a href="https://courts.alaska.gov/shc/family">Family Law Self-HelpCenter</a><br>(907)264-0851, or<br>(866)279-0851,<br>or</li><li>Use <strong>Exemption From the Payment of Fees, TF-920</strong>[<a href="https://public.courts.alaska.gov/web/forms/docs/tf-920.pdf">Fill-In PDF</a>]</li></ul>'
      elif (type_of_final_order['custody order'] \
          and why_change in('review', 'schedule')) \
        or (type_of_final_order.any_true('property or debt', 'spousal support') \
          and why_change_divorce_order == 'changed circumstances'):
        file_modify_filing_fee = '<li>Pay the $75 fee to file your Motion to Modify.</br>If you cannot afford the filing fee, you can ask the court to waive it:</li><ul><li>Call the <a href="https://courts.alaska.gov/shc/family">Family Law Self-HelpCenter</a><br>(907)264-0851, or<br>(866)279-0851,<br>or</li><li>Use <strong>Exemption From the Payment of Fees, TF-920</strong>[<a href="https://public.courts.alaska.gov/web/forms/docs/tf-920.pdf">Fill-In PDF</a>]</li></ul>'
      
      if parents_agree:
        add_unique_step((pick_a_step_step, "pick_a_step_idx"), step_list)
        add_unique_step((parents_agree_step, "parents_agree_idx"), step_list)
        add_unique_step((tell_the_court_step, "tell_the_court_idx"), step_list)
      
      if defined('final_order_period') \
        and guess_final_order_date == 'unknown':
          if unknown_final_date.all_true('reconsider', 'appeal') or unknown_final_date.all_true('reconsider', 'set aside') or unknown_final_date.all_true('appeal', 'set aside') or unknown_final_date.all_true('reconsider', 'appeal', 'set aside'):
            add_unique_step((pick_a_step_step, "pick_a_step_idx"), step_list)       
      
      # Rows 24-27
      if type_of_final_order['custody order'] \
        and why_change in('review', 'schedule'):
        add_unique_step((modify_step, "modify_idx"), step_list)
        add_unique_step((fill_modify_step, "fill_modify_idx"), step_list)
        add_unique_step((calculate_child_support_step, "calculate_child_support_idx"), step_list)
        add_unique_step((dont_wait_modify_custody_divorce_step, "dont_wait_modify_custody_divorce_idx"), step_list)
        add_unique_image({'image': service_cert_modify_image, 'text': "Certificate of Service at the bottom of a Motion to Modify."}, images_list)
        if type_of_final_order.all_true('custody order', exclusive = True):
          file_step_heading = 'File your Modify Custody, Visitation & Support Packet'
          motion_type = 'Motion to Modify'
        
      # Rows 48-49, 67-68 
      if type_of_final_order.any_true('property or debt', 'spousal support') \
        and why_change_divorce_order == 'changed circumstances':
        add_unique_step((modify_divorce_step, "modify_divorce_idx"), step_list)
        add_unique_step((fill_modify_divorce_step, "fill_modify_divorce_idx"), step_list)
        add_unique_image({'image': service_cert_modify_spousal_support_property_image, 'text': "Certificate of Service at the bottom of a Request to Modify Order or Decree Concerning Spousal Maintenance or Property Allocation."}, images_list)
        if not type_of_final_order['custody order']:
          file_step_heading = 'File your Request to Modify Order or Decree Concerning Spousal Maintenance or Property Allocation'
          motion_type = 'Motion to Modify'
          log('--simple modify divorce', "console")             

      if ((type_of_final_order['custody order'] \
            and why_change == 'problem') \
          or (type_of_final_order.any_true('property or debt','spousal support') \
            and why_change_divorce_order == 'problem')) \
        and final_order_date_within_10_days:
        add_unique_step((learn_reconsider_step, "learn_reconsider_idx"), step_list)
        add_unique_step((fill_reconsider_step, "fill_reconsider_idx"), step_list)
        add_unique_image({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set # Aside."}, images_list)
        if not ((type_of_final_order['custody order'] \
                 and why_change in('review', 'schedule')) \
             or (type_of_final_order.any_true('property or debt','spousal support') \
                 and why_change_divorce_order == 'changed circumstances')):
          file_step_heading = 'File your Motion to Reconsider'
        else:
          motion_type = 'Motion to Modify'
      
      if (type_of_final_order['custody order'] \
          and why_change == 'problem' \
          and final_order_date_within_15_days) \
        or (type_of_final_order.any_true('property or debt','spousal support') \
          and why_change_divorce_order == 'problem' \
          and final_order_date_within_30_days):
        add_unique_step((appeal_step, 'appeal_idx'), step_list)
        add_unique_step((learn_set_aside_step, "learn_set_aside_idx"), step_list)
        add_unique_step((fill_set_aside_step, "fill_set_aside_idx"), step_list)
        add_unique_image({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside."}, images_list)
        if not ((type_of_final_order['custody order'] \
                 and why_change in('review', 'schedule')) \
             or (type_of_final_order.any_true('property or debt','spousal support') \
                 and why_change_divorce_order == 'changed circumstances')):
          file_motion_to_set_aside = 'If you decide to file a **Motion to Set Aside** because it fits your case:'
          file_step_heading = 'File your Motion to Set Aside'
          motion_type = 'Motion to Set Aside'               

      if ((type_of_final_order['custody order'] \
            and why_change == 'problem') \
          or (type_of_final_order.any_true('property or debt','spousal support') \
            and why_change_divorce_order == 'problem')) \
        and (final_order_date_within_30_days \
          or final_order_date_more_30_days):
        add_unique_step((learn_set_aside_step, "learn_set_aside_idx"), step_list)
        add_unique_step((fill_set_aside_step, "fill_set_aside_idx"), step_list)
        add_unique_image({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside."}, images_list)
        if not ((type_of_final_order['custody order'] \
                 and why_change in('review', 'schedule')) \
             or (type_of_final_order.any_true('property or debt','spousal support') \
                 and why_change_divorce_order == 'changed circumstances')):
          file_motion_to_set_aside = 'If you decide to file a **Motion to Set Aside** because it fits your case:'
          file_step_heading = 'File your Motion to Set Aside'
          motion_type = 'Motion to Set Aside'

      if ((type_of_final_order['custody order'] \
            and why_change == 'problem') \
          or (type_of_final_order.any_true('property or debt','spousal support') \
              and why_change_divorce_order == 'problem')) \
          and showifdef('guess_final_order_date') != 'unknown':
          add_unique_step((cert_of_service_step, "cert_of_service_idx"), step_list)
          add_unique_step((file_step, "file_idx"), step_list)
          add_unique_step((serve_step, "serve_idx"), step_list)
          if not final_order_date_within_10_days:
            # motion_type = 'Motion to Set Aside'
            add_unique_step((expect_after_motion_step, "expect_after_motion_idx"), step_list)
            log('known final order date motion','console')
          if final_order_date_within_10_days:
            add_unique_step((expect_reconsider_step, "expect_reconsider_idx"), step_list)
            log('known final order date reconsider','console')

  #####user does not know the date of final order. 
  #### Add steps for specific motions
      if defined('final_order_period') \
        and guess_final_order_date == 'unknown':
          if unknown_final_date['reconsider']:
            add_unique_step((learn_reconsider_step, "learn_reconsider_idx"), step_list)
            add_unique_step((fill_reconsider_step, "fill_reconsider_idx"), step_list)
          if unknown_final_date['appeal']:
            add_unique_step((appeal_step, "appeal_idx"), step_list)
          if unknown_final_date['set aside']:
            add_unique_step((learn_set_aside_step, "learn_set_aside_idx"), step_list)
            add_unique_step((fill_set_aside_step, "fill_set_aside_idx"), step_list)
            # file_motion_to_set_aside = 'If you decide to file a <b>Motion to Set Aside</b>:'

  #### Add images to Certificate of Service step
          if unknown_final_date.all_true('reconsider', exclusive=True) \
            or unknown_final_date.all_true('appeal','reconsider', exclusive=True):
            add_unique_image({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Reconsider"}, images_list)
          if unknown_final_date.all_true('set aside', exclusive=True) \
            or unknown_final_date.all_true('appeal','set aside', exclusive=True):
            add_unique_image({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside"}, images_list)
          if unknown_final_date.all_true('reconsider','set aside', exclusive=True) \
            or unknown_final_date.all_true('reconsider','appeal','set aside'):
            add_unique_image({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Reconsider and the Motion to Set Aside"}, images_list)

  ##### Add File step heading and language for what to expect step
          if (type_of_final_order['custody order'] \
              and why_change in('review','schedule')) \
            or (type_of_final_order.any_true('property or debt','spousal support') \
              and why_change_divorce_order == 'changed circumstances'):
            if unknown_final_date.all_true('appeal', 'reconsider', exclusive = True) \
              or unknown_final_date.all_true('appeal', exclusive = True) \
              or unknown_final_date.all_true('reconsider', exclusive = True):
              motion_type = 'Motion to Modify'
          elif not (
            (type_of_final_order['custody order'] \
              and why_change in('review','schedule')) \
            and 
            (type_of_final_order.any_true('property or debt','spousal support') \
              and why_change_divorce_order == 'changed circumstances')
            ):
            if unknown_final_date.all_true('reconsider', exclusive=True) \
              or unknown_final_date.all_true('appeal','reconsider', exclusive=True):
              file_step_heading = 'File your Motion to Reconsider'
            if unknown_final_date.all_true('set aside', exclusive=True) \
              or unknown_final_date.all_true('appeal','set aside', exclusive=True):
              file_step_heading = 'File your Motion to Set Aside'
              motion_type = 'Motion to Set Aside'
            if unknown_final_date['set aside'] :
              motion_type = 'Motion to Set Aside'

  #####SKIP steps for certificate of service, file, and serve if user is interested only in appeals and does not know the date of final order.
          if not unknown_final_date.all_true('appeal', exclusive=True):
            add_unique_step((cert_of_service_step, "cert_of_service_idx"), step_list)
            add_unique_step((file_step, "file_idx"), step_list)
            add_unique_step((serve_step, "serve_idx"), step_list)
          if unknown_final_date['set aside'] or ((type_of_final_order['custody order'] and why_change in('review','schedule')) \
          or (type_of_final_order.any_true('property or debt','spousal support') and why_change_divorce_order == 'changed circumstances')):
            add_unique_step((expect_after_motion_step, "expect_after_motion_idx"), step_list)
            log('unknown motion','console')
          if unknown_final_date['reconsider']:
            add_unique_step((expect_reconsider_step, "expect_reconsider_idx"), step_list)
            log('unknown reconsider','console')

      if (type_of_final_order['custody order'] and why_change in('review','schedule')) \
          or (type_of_final_order.any_true('property or debt','spousal support') and why_change_divorce_order == 'changed circumstances'):
        add_unique_step((cert_of_service_step, "cert_of_service_idx"), step_list)
        add_unique_step((file_step, "file_idx"), step_list)
        add_unique_step((serve_step, "serve_idx"), step_list)
        add_unique_step((expect_after_motion_step, "expect_after_motion_idx"), step_list)
        log('modify expect','console')

  add_unique_step((get_help, "get_help_idx"), step_list)
    
  for iter_idx, step_tuple in enumerate( step_list ):
    define(step_tuple[ 1 ], iter_idx + 1)
  get_steps = True
---
code: |
  # Alternatives to make sure we don't get duplicate steps

  #### Alternative 1:
  # Define them all at the top
  add_cert_of_service = False
  
  # Set which steps to add (interview order)
  if foo:
    add_cert_of_service = True
  if bar:
    add_cert_of_service = True
  make_steps
  
  ## Didn't like this part (like "alternative 1")
  ## If there are any special cases that are hard to keep track of
  ## and need to be in a specific visual order
  #add_file_step = False
  #if some_condition_that_adds_modify_step:
  #  add_file_step = True
  ## At the very end
  #if add_file_step:
  #  add_unique_step("")
    
  # Other code block or something. Maybe.
  # Gives better control over what order to add steps in the list
  step_list = []
  if add_cert_of_service:
    add_unique_step((cert_of_service_step, "cert_of_service_idx"), step_list)
  if add_other:
    add_unique_step("blah")
  make_steps = True
---
code: |
  #### Alternative 2:
  def add_unique_step(step, step_list):
    is_unique = True
    for chair in step_list:
      if chair[1] == step[1]:
        is_unique = False
    if is_unique:
      step_list.append(step)
      
  #if foo:
  #  add_unique_step((file_step, "file_idx"), step_list)
---
code: |
  def add_unique_image(new_image, image_list):
    is_unique = True
    for image in image_list:
      if image['image'] == new_image['image']:
        is_unique = False
    if is_unique:
      image_list.append(new_image)
---
template: modify_divorce_step
subject: |
  Step ${ modify_divorce_idx }: Learn about the Motion to Modify
  % if type_of_final_order['property or debt']:
  Divorce Property & Debt Division
  % endif
  % if type_of_final_order.all_true('property or debt', 'spousal support'):
   and 
  % endif
  % if type_of_final_order['spousal support']:
  Spousal Support
  % endif
content: |
    Changing your divorce order is called “modifying” it.  To ask the judge to change your divorce order, file a **Motion to Modify**. The rules for changing spousal support are different from the rules for dividing property and debt.
    % if type_of_final_order[ 'spousal support']:
    <div class="step-subheading">Change spousal support</div>
    
    The court will generally only change spousal support if there is a "substantial change in circumstances."
    
    **Some examples**
    
    * The court ordered Spouse A to pay Spouse B spousal support.  Spouse B was very ill and could not work.  Spouse B is now better and has a full-time job.
    * The court ordered Spouse A to pay Spouse B spousal support for 4 years so Spouse B could get a degree that would help them earn more money.  Spouse B got their degree in 3 years and now has a full-time job earning more money because of the degree. 
    % endif
    
    % if type_of_final_order['property or debt']:
    <div class="step-subheading">Change the property and debt division</div>
    
    Changing the outcome of final property and debt decisions in a divorce case can be tough. Once the court decides who gets what, it is not easy to undo those decisions.
    
    **Some examples**
    
    *	If the court awards the house to one spouse, they might sell it, and then it is impossible to get it back if the other spouse later wants the court to award them the house.
    * The court orders one person to receive some money from the marriage. If they spend that money, it cannot be taken back later.
    % endif
--- 
template: fill_modify_divorce_step
subject: |
  Step ${ fill_modify_divorce_idx }: Fill out the motion form to modify
  % if type_of_final_order.all_true('property or debt', 'spousal support'):
  the property and debt division and the spousal support orders
  % elif type_of_final_order['property or debt']:
  the property and debt division order
  % elif type_of_final_order['spousal support']:
  the spousal support order
  % endif
content: |
  <div class="step-subheading">Use</div>
   <strong>Request to Modify Order or Decree Concerning Spousal Maintenance or Property Allocation, DR-735</strong> [<a href= "https://public.courts.alaska.gov/web/forms/docs/dr-735.pdf">Fill-In PDF</a>]
  <ul><li> Wait to sign the form until you are in front of someone who has the power to take oaths, like a notary public.
  <ul><li>The court clerk can do this for free.</li>
  <li>Bring a valid photo ID with you.</li>
  </ul></li> 
  <li>If you cannot get to a notary public or someone who has the power to take oaths, you can "self-certify."  Use: 
  <ul><li><strong>Self-Certification (No Notary Available), TF-835</strong> [<a href= "https://public.courts.alaska.gov/web/forms/docs/tf-835.pdf">Fill-In PDF</a>]</li></ul></li>
  </ul>
  
  <div class="step-subheading">Watch</div>
  
  * [Motions Part 1: How to Ask the Court For Something](https://www.youtube.com/watch?v=2irmxT0_0EA) 
---