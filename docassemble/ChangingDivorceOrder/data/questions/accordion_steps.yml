id: final screen
decoration: pen-to-square
event: confirmation_and_download
question: |
  % if len(step_list) < 2:
  Get more information or help
  % else:
  # <i class="fa-thin fa-list"></i>Your Personal Action Plan is ready!
  % endif
subquestion: |
  
  % if len(step_list) < 2:
  For help with forms or understanding the process:
  <ul><li>Call the Family Law Self-Help Center
  <br>
  (907) 264-0851 or<br>  
  (866) 279-0851.</li>
  <li>See the court’s <a href="https://courts.alaska.gov/shc/family">Family Law Self-Help Center web pages</a>.</li>
  </ul>
  
  Many lawyers offer free or flat fee consultations without having to hire them for the whole case. [Find a Lawyer](https://courts.alaska.gov/shc/shclawyer.htm).
  
  Depending on your income, you may qualify for [Alaska Free Legal Answers](https://alaska.freelegalanswers.org).
  
  Depending on your income and circumstances, you may qualify for a free lawyer from [Alaska Legal Services](https://alsc-law.org/apply-for-services).
  % else:
  
  % if user_need in('change custody order','change foreign custody order'):
  #### Your Personal Action Plan for changing your custody or parenting plan in ${ len(step_list) } steps
  % elif user_need ==  'respond to custody':
  % if type_of_response == 'appeal':
  #### Your Personal Action Plan for responding to the appeal in ${ len(step_list) } steps
  % else:
  #### Your Personal Action Plan for responding to the motion in ${ len(step_list) } steps
  % endif 
  % endif
  % for iteration_index, step_tuple in enumerate( step_list ):
  ${ collapse_template(step_tuple[0], closed_icon="plus", open_icon="minus") }
  % endfor
  % endif
  ${ download_buttons_html(al_user_bundle) }
  
buttons:
  - Start over: restart
---
code: |
  # Temporarily disable why_change
  old_why_change = {
     'set aside clerical error': True,
     'set aside mistake of fact': True,
     'set aside new evidence': True,
     'set aside misconduct': True,
     'modify circumstances changed': True,
     'modify parent to jail': True,
     'modify domestic violence': True,
     'modify other change': True,
     'appeal legal mistake': True,
     'set aside new evidence': True,
  }

  step_list = []
  if len(step_list) >= 2:
    pdf_pap_multistep_subtitle = True
  images_list = []
  distribution_certificate_list = []
  other_party_in_case  = 'the other parent'
  case_type = 'divorce'
  # certificate_of_service_image = ''
  distribution_certificate_list.append({'image': distrib_cert_custody_divorce_image, 'text': "Certificate of Distribution shows the date the court sent your order to you."})
  file_motion_to_set_aside = ''
  file_motion_to_enforce = ''
  file_modify_filing_fee = ''
  # expect_after_motion is in what to expect step for filing motion for interim order w complaint, or answer/response, cannot use variable in docx template, must insert condition in what to expect step.
  expect_after_motion = ''
  motion_type = 'motion'
  
  
  if user_need == 'none':
    step_list.append((wrong_tf, "wrong_tf_idx"))
    step_list.append((wrong_tf2, "wrong_tf2_idx"))
    
  # Row 1
  elif user_need == 'change foreign custody order':
    step_list.append((foreign_order_step, "foreign_order_idx"))
    step_list.append((ak_jurisdiction_step, "ak_jurisdiction_idx"))
    step_list.append((register_order_step, "register_order_idx"))
    step_list.append((modify_step, "modify_idx"))
    step_list.append((fill_modify_step, "fill_modify_idx"))
    step_list.append((calculate_child_support_step, "calculate_child_support_idx"))
    step_list.append((dont_wait_modify_custody_divorce_step, "dont_wait_modify_custody_divorce_idx"))
    images_list.append({'image': service_cert_modify_image, 'text': "Certificate of Service at the bottom of a Motion to Modify."})
    step_list.append((cert_of_service_step, "cert_of_service_idx"))
    file_step_heading = 'File your Motion to Modify'
    file_modify_filing_fee = '<li>Pay the $75 fee to file your Motion to Modify</li><ul><li>Call the <a href="https://courts.alaska.gov/shc/family">Family Law Self-HelpCenter</a><br>(907)264-0851, or<br>(866)279-0851,<br>or</li><li>Use <strong>Exemption From the Payment of Fees, TF-920</strong>[<a href="https://public.courts.alaska.gov/web/forms/docs/tf-920.pdf">Fill-In PDF</a>]</li></ul>'
    step_list.append((file_step, "file_idx"))
    step_list.append((serve_step, "serve_idx"))
    motion_type = 'Motion to Modify'
    step_list.append((expect_after_motion_step, "expect_after_motion_idx"))
  
  elif user_need == 'respond to custody':
    
  
    # Rows 2 - 10
    if type_of_response in('custody','divorce', 'all divorce'):
      motion_type = 'Motion to Modify'

    # Row 11
    if type_of_response == 'reconsider' and respond_to_reconsider:
      step_list.append((respond_to_reconsider_step, "respond_to_reconsider_idx"))
      
    # Row 12 - 14
    if type_of_response == 'set aside':
      if not type_of_response in('custody','divorce','all divorce'):
        motion_type = 'Motion to Set Aside Judgment or Order'
    
    # Rows 2, 5, 8 & 12 
    if (type_of_response in('custody','divorce', 'all divorce') and respond_to_custody == 'agree') or (type_of_response == 'set aside' and respond_to_set_aside == 'agree'):
      step_list.append((let_court_party_know_you_agree_step, "let_court_party_know_you_agree_idx"))
    
    # Row 2-10, 12-14
    if type_of_response in('custody','divorce','all divorce') or type_of_response == 'set aside':
      step_list.append((respond_in_writing_step, "respond_in_writing_idx"))
    
    # Row 2-14  
    if type_of_response in('custody','divorce','all divorce','set aside', 'reconsider' ):
      step_list.append((file_response_step, "file_response_idx"))
    
    # Row 2-10, 12-14
    if type_of_response in('custody','divorce', 'all divorce', 'set aside'):
      step_list.append((expect_after_response_step, "expect_after_response_idx"))
      
    if (type_of_response in('custody','divorce','all divorce') and respond_to_custody == 'agree') or (type_of_response == 'set aside' and respond_to_set_aside == 'agree'):
      step_list.append((contact_other_party_step, "contact_other_party_idx"))    
      step_list.append((file_agreement_step, "file_agreement_idx"))
    
    # Row 15
    if type_of_response == 'appeal' and respond_to_appeal == 'agree':
      step_list.append((appeal_response_step, "appeal_response_idx"))
      step_list.append((appeal_contact_parent_step, "appeal_contact_parent_idx"))
      step_list.append((tell_supreme_court_step, "tell_supreme_court_idx"))
    
    # Rows 16 & 17
    if type_of_response =='appeal' and respond_to_appeal in('some','none'):
      step_list.append((appeal_response_step, "appeal_response_idx"))
    
  else:    
       ##################### middle of case
    if middle_of_case == 'yes':
      other_party_in_case = 'your spouse'
      
    # Rows 18-19 
    if middle_of_case == 'yes' \
      and type_of_interim_order == 'motion' \
      and interim_order_date_within_10_days:
      if parents_agree:
        step_list.append((pick_a_step_step, "pick_a_step_idx"))
        step_list.append((parents_agree_step, "parents_agree_idx"))
        step_list.append((tell_the_court_step, "tell_the_court_idx"))
      step_list.append((learn_reconsider_step, "learn_reconsider_idx"))
      step_list.append((fill_reconsider_step, "fill_reconsider_idx"))
      images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Reconsider"})
      step_list.append((cert_of_service_step, "cert_of_service_idx"))
      file_step_heading = 'File your Motion to Reconsider'
      step_list.append((file_step, "file_idx"))
      step_list.append((serve_step, "serve_idx"))
      step_list.append((expect_reconsider_step, "expect_reconsider_idx"))
      
    # Rows 20 & 21
    if middle_of_case == 'yes' \
      and type_of_interim_order == 'motion' \
      and not interim_order_date_within_10_days: 
      if parents_agree:
        step_list.append((pick_a_step_step, "pick_a_step_idx"))
        step_list.append((parents_agree_step, "parents_agree_idx"))
        step_list.append((tell_the_court_step, "tell_the_court_idx"))
      step_list.append((motion_forms_step, "motion_forms_idx"))
      images_list.append({'image': service_cert_motion_shc_1300_image, 'text': "Certificate of Service at the bottom of a motion."})
      step_list.append((cert_of_service_step, "cert_of_service_idx")) 
      file_step_heading = 'File your Motion to Modify'
      step_list.append((file_step, "file_idx"))
      step_list.append((serve_step, "serve_idx"))
      motion_type = 'Motion to Modify'
      step_list.append((expect_after_motion_step, "expect_after_motion_idx"))
   
    # Rows 22-23 
    if middle_of_case == 'yes' \
      and type_of_interim_order == 'standing order':
      if parents_agree:
        step_list.append((pick_a_step_step, "pick_a_step_idx"))
        step_list.append((parents_agree_step, "parents_agree_idx"))
        step_list.append((tell_the_court_step, "tell_the_court_idx"))
      step_list.append((standing_order_step, "standing_order_idx")) 
      step_list.append((motion_forms_step, "motion_forms_idx"))
      images_list.append({'image': service_cert_motion_shc_1300_image, 'text': "Certificate of Service at the bottom of a motion."})
      step_list.append((cert_of_service_step, "cert_of_service_idx")) 
      step_list.append((file_step, "file_idx"))
      step_list.append((serve_step, "serve_idx"))
      step_list.append((expect_after_motion_step, "expect_after_motion_idx"))
    

       ##################### after final order
    if middle_of_case == 'no':
      other_party_in_case = 'your ex spouse'
      
      if parents_agree:
        step_list.append((pick_a_step_step, "pick_a_step_idx"))
        step_list.append((parents_agree_step, "parents_agree_idx"))
        step_list.append((tell_the_court_step, "tell_the_court_idx"))
      
    # Rows 24-27
      if type_of_final_order['custody order'] \
        and why_change in('review', 'schedule'):
        step_list.append((modify_step, "modify_idx"))
        step_list.append((fill_modify_step, "fill_modify_idx"))
        step_list.append((calculate_child_support_step, "calculate_child_support_idx"))
        step_list.append((dont_wait_modify_custody_divorce_step, "dont_wait_modify_custody_divorce_idx"))
        images_list.append({'image': service_cert_modify_image, 'text': "Certificate of Service at the bottom of a Motion to Modify."})
        if type_of_final_order.all_true('custody order', exclusive = True):
          file_step_heading = 'File your Modify Custody, Visitation & Support Packet' 
        
        
      if type_of_final_order.any_true('property or debt', 'spousal support') \
        and why_change_divorce_order == 'changed circumstances':
        step_list.append((modify_divorce_step, "modify_divorce_idx"))
        step_list.append((fill_modify_divorce_step, "fill_modify_divorce_idx"))
        if type_of_final_order.any_true('property or debt', 'spousal support', exclusive = True) \
          and (type_of_final_order.all_false('custody order', exclusive = True) or (type_of_final_order['custody order'] and why_change in('review', 'schedule'))):
          file_step_heading = 'File your Request to Modify Order or Decree Concerning Spousal Maintenance or Property Allocation'

               
    # Rows 28 - 29, 47-48 & 69-70
      if ((type_of_final_order['custody order'] \
        and why_change == 'problem') \
        or (type_of_final_order.any_true('property or debt','spousal support') \
        and why_change_divorce_order == 'problem' )) \
        and final_order_date_within_10_days:
          step_list.append((learn_reconsider_step, "learn_reconsider_idx"))
          step_list.append((fill_reconsider_step, "fill_reconsider_idx"))
          images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of Motion to Reconsider and Motion to Set Aside."})
          step_list.append((cert_of_service_step, "cert_of_service_idx"))
          if (type_of_final_order['custody order'] \
            and why_change in('review', 'schedule')) \
            or (type_of_final_order.any_true('property or debt','spousal support') \
            and why_change_divorce_order == 'changed circumstances'):
              file_step_heading = 'File your motions'
          else:
              file_step_heading = 'File your Motion to Reconsider'
      #    step_list.append((file_step, "file_idx"))
      #    step_list.append((serve_step, "serve_idx"))
      #    step_list.append((expect_reconsider_step, "expect_reconsider_idx"))

        
    # Rows 30 - 31, 49-50 & 71-72
      if type_of_final_order['custody order'] \
        and why_change == 'problem' \
        and type_of_final_order.any_true('property or debt','spousal support') \
        and why_change_divorce_order == 'problem' \
        and final_order_date_within_15_days:
          if not parents_agree:
            step_list.append((pick_a_step_step, "pick_a_step_idx"))
          step_list.append((appeal_step, 'appeal_idx'))
          step_list.append((learn_set_aside_step, "learn_set_aside_idx"))
          step_list.append((fill_set_aside_step, "fill_set_aside_idx"))
          images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside."})
          file_motion_to_set_aside = 'If you decide to file a <b>Motion to Set Aside</b>:'
       #   step_list.append((cert_of_service_step, "cert_of_service_idx"))
       #   step_list.append((file_step, "file_idx"))
       #   step_list.append((serve_step, "serve_idx"))
       #   step_list.append((expect_after_motion_step, "expect_after_motion_idx"))
       
    # Rows 32 - 33, 51-52 & 73-74
      if type_of_final_order['custody order'] \
        and why_change == 'problem' \
        and type_of_final_order.any_true('property or debt','spousal support') \
        and why_change_divorce_order == 'problem' \
        and not final_order_date_within_10_days \
        and not final_order_date_within_15_days:
        step_list.append((learn_set_aside_step, "learn_set_aside_idx"))
        step_list.append((fill_set_aside_step, "fill_set_aside_idx"))
        images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside."})
        file_motion_to_set_aside = 'If you decide to file a <b>Motion to Set Aside</b>:'
          
    # Rows 24-27
      if type_of_final_order['custody order'] \
        and why_change in('review','schedule') \
        and type_of_final_order.any_true('property or debt','spousal support') \
        and why_change_divorce_order == 'problem' \
        and final_order_date_within_30_days:
          if not parents_agree:
            step_list.append((pick_a_step_step, "pick_a_step_idx"))
          step_list.append((appeal_step, 'appeal_idx'))
          step_list.append((learn_set_aside_step, "learn_set_aside_idx"))
          step_list.append((fill_set_aside_step, "fill_set_aside_idx"))
          images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside."})
          file_motion_to_set_aside = 'If you decide to file a <b>Motion to Set Aside</b>:'
          
    # Rows 24-27
      if type_of_final_order['custody order'] \
        and why_change in('review','schedule') \
        and type_of_final_order.any_true('property or debt','spousal support') \
        and why_change_divorce_order == 'problem'  \
        and not final_order_date_within_10_days \
        and not final_order_date_within_30_days:
          step_list.append((learn_set_aside_step, "learn_set_aside_idx"))
          step_list.append((fill_set_aside_step, "fill_set_aside_idx"))
          images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside."})
          file_motion_to_set_aside = 'If you decide to file a <b>Motion to Set Aside</b>:'

    # Rows
      if type_of_final_order.any_true('property or debt', 'spousal support', exclusive=True) and why_change_divorce_order == 'problem' \
        and final_order_date_within_30_days:
        if not parents_agree:
          step_list.append((pick_a_step_step, "pick_a_step_idx"))
        step_list.append((appeal_step, 'appeal_idx'))
        step_list.append((learn_set_aside_step, "learn_set_aside_idx"))
        step_list.append((fill_set_aside_step, "fill_set_aside_idx"))
        images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside."})
        file_motion_to_set_aside = 'If you decide to file a <b>Motion to Set Aside</b>:'

    # Rows
      if type_of_final_order.any_true('property or debt', 'spousal support', exclusive=True) and why_change_divorce_order == 'problem' \
        and not final_order_date_within_10_days \
        and not final_order_date_within_30_days:
        step_list.append((learn_set_aside_step, "learn_set_aside_idx"))
        step_list.append((fill_set_aside_step, "fill_set_aside_idx"))
        images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside."})
        file_motion_to_set_aside = 'If you decide to file a <b>Motion to Set Aside</b>:'  
      
      
            
      if defined('final_order_period') \
          and guess_final_order_date == 'unknown':
            if unknown_final_date['reconsider']:
              step_list.append((learn_reconsider_step, "learn_reconsider_idx"))
              step_list.append((fill_reconsider_step, "fill_reconsider_idx"))
            if unknown_final_date['appeal']:                
              step_list.append((appeal_step, "appeal_idx"))
            if unknown_final_date['set aside']:
              step_list.append((learn_set_aside_step, "learn_set_aside_idx"))
              step_list.append((fill_set_aside_step, "fill_set_aside_idx"))
              images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Set Aside."})

            if unknown_final_date.any_true('reconsider','set aside'):
              images_list.append({'image': service_cert_reconsider_set_aside_image, 'text': "Certificate of Service at the bottom of the Motion to Reconsider and the Motion to Set Aside."})
              if not unknown_final_date['set aside']:
                file_step_heading = 'File your Motion to Reconsider'
              elif not unknown_final_date['reconsider']:
                file_step_heading = 'File your Motion to Set Aside'
            #  if unknown_final_date['reconsider']:
            #    step_list.append((expect_reconsider_step, "expect_reconsider_idx"))
              if unknown_final_date['set aside']:
                file_motion_to_set_aside = 'If you decide to file a <b>Motion to Set Aside</b>:'
                motion_type = 'Motion to Set Aside'
   
      if defined('final_order_period') \
        and guess_final_order_date == 'unknown':
        if unknown_final_date.any_false('appeal', exclusive=True):
          step_list.append((cert_of_service_step, "cert_of_service_idx"))
          step_list.append((file_step, "file_idx"))
          step_list.append((serve_step, "serve_idx"))
          if unknown_final_date['reconsider']:
            step_list.append((expect_reconsider_step, "expect_reconsider_idx"))
          if unknown_final_date['set aside']:
            step_list.append((expect_after_motion_step, "expect_after_motion_idx"))
      else:
        step_list.append((cert_of_service_step, "cert_of_service_idx"))
        step_list.append((file_step, "file_idx"))
        step_list.append((serve_step, "serve_idx"))
        if defined('final_order_date_within_10_days') and final_order_date_within_10_days:
          step_list.append((expect_reconsider_step, "expect_reconsider_idx"))
        else:
          step_list.append((expect_after_motion_step, "expect_after_motion_idx"))

    
  step_list.append((get_help, "get_help_idx"))
    
  for iter_idx, step_tuple in enumerate( step_list ):
    define(step_tuple[ 1 ], iter_idx + 1)
  get_steps = True
---
template: modify_divorce_step
subject: |
  Step ${ modify_divorce_idx }: Learn about the Motion to Modify
  % if type_of_final_order['property or debt']:
  Divorce Property & Debt Division
  % endif
  % if type_of_final_order.all_true('property or debt', 'spousal support'):
   and 
  % endif
  % if type_of_final_order.all_true('spousal support'):
  Spousal Support
  % endif
content: |
    Changing your divorce order is called “modifying” it.  To ask the judge to change your divorce order, file a Motion to Modify. The rules for changing spousal support are different from the rules for dividing property and debt.
    % if type_of_final_order[ 'spousal support']:
    <div class="step-subheading">Change spousal support</div>
    
    The court will generally only change spousal support if there is a "substantial change of circumstances".
    
    **Some examples**
    
    * The court ordered Spouse A to pay Spouse B spousal support.  Spouse B was very ill and could not work.  Spouse B is now better and has a full-time job.
    * The court ordered Spouse A to pay Spouse B spousal support for 4 years so Spouse B could get a degree that would help them earn more money.  Spouse B got their degree in 3 years and now has a full-time job earning more money because of the degree. 
    % endif
    
    % if type_of_final_order['property or debt']:
    <div class="step-subheading">Change the property and debt division</div>
    
    Changing the outcome of final property and debt decisions in a divorce case can be tough. Once the court decides who gets what, it is not easy to undo those decisions.
    
    **Some examples**
    
    *	If the court awards the house to one spouse, they might sell it, and then it is impossible to get it back if the other spouse later wants the court to award them the house.
    * The court orders one person to receive some money from the marriage. If they spend that money, it cannot be taken back later.
    % endif
---    
template: fill_modify_divorce_step
subject: |
  Step ${ fill_modify_divorce_idx }: Fill out the motion to modify the property and debt division or spousal support forms
content: |
  <div class="step-subheading">Use</div>
  
  * Request to Modify Order or Decree Concerning Spousal Maintenance or Property Allocation, [DR-735](https://public.courts.alaska.gov/web/forms/docs/dr-735.pdf) [Fill-In PDF]
  Three of the forms in this packet are affidavits:
  
  * Wait to sign them until you are in front of someone who has the power to take oaths, like a notary public.  
  * The court clerk can do this for free.  
  * Bring a valid photo ID with you.  
  * If you cannot get to a notary public or someone who has the power to take oaths, you can "self-certify".  Use: **Self-Certification (No Notary Available)** [TF-835](https://public.courts.alaska.gov/web/forms/docs/tf-835.pdf) [Fill-In PDF]
  
  <div class="step-subheading">Watch</div>
  
  * [Motions Part 1: How to Ask the Court For Something](https://www.youtube.com/watch?v=2irmxT0_0EA) 
---